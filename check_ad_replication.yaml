---
- name: Check Active Directory Replication
  hosts: windows
  gather_facts: no
  vars:
    dc_list:
      - 10.50.20.65   # DC 1
      - 10.50.20.85   # DC 2
  tasks:

    - name: Test connectivity to each DC before replication check
      win_shell: |
        $dc_list = {{ dc_list | to_json }} | ConvertFrom-Json
        $results = @()
        $ports = @(135, 389, 3268)
        foreach ($dc in $dc_list) {
            foreach ($port in $ports) {
                $test = Test-NetConnection -ComputerName $dc -Port $port
                if (-not $test.TcpTestSucceeded) {
                    $results += "$dc port $port unreachable"
                }
            }
        }
        if ($results.Count -eq 0) {
            "All DCs reachable"
        } else {
            $results -join "`n"
        }
      register: dc_connectivity
      failed_when: false

    - name: Show DC connectivity result
      debug:
        msg: "{{ dc_connectivity.stdout }}"

    - name: Run repadmin to check replication status
      win_command: repadmin /replsummary
      register: replsummary
      failed_when: false

    - name: Process replication summary into list
      set_fact:
        cleaned_summary_list: >-
          {%- set output = [] -%}
          {%- for line in replsummary.stdout_lines -%}
            {%- set l = line.strip() -%}
            {%- if l != '' and (
                  l.startswith('Replication Summary Start Time') or
                  l.startswith('Beginning data collection') or
                  l.startswith('.....') or
                  l.startswith('Source DSA') or
                  l.startswith('Destination DSA') or
                  (l[0:1].isalpha() and not l.startswith('Experienced') and not l.startswith('Repadmin'))
            ) -%}
              {{- output.append(l) -}}
            {%- endif -%}
          {%- endfor -%}
          {{ output }}

    - name: Show cleaned replication summary (vertical)
      debug:
        msg: |
          {% for line in cleaned_summary_list %}
          {{ line }}
          {% endfor %}

    - name: Run repadmin to check replication partners
      win_command: repadmin /showrepl
      register: showrepl
      failed_when: false

    - name: Process replication details into structured list
      set_fact:
        cleaned_details_list: >-
          {%- set output = [] -%}
          {%- set current_dc = '' -%}
          {%- for line in showrepl.stdout_lines -%}
            {%- set l = line.strip() -%}
            {%- if l != '' -%}
              {%- if l.startswith('Default-First-Site-Name') -%}
                {{- output.append("\n" + l) -}}
                {%- set current_dc = l -%}
              {%- elif l.startswith('CN=') or l.startswith('DC=') -%}
                {{- output.append("  Partition: " + l) -}}
              {%- elif l.startswith('DSA Options:') or l.startswith('Site Options:') or l.startswith('DSA object GUID:') or l.startswith('DSA invocationID:') -%}
                {{- output.append("    " + l) -}}
              {%- elif l.startswith('Last attempt') -%}
                {{- output.append("    " + l) -}}
              {%- endif -%}
            {%- endif -%}
          {%- endfor -%}
          {{ output }}

    - name: Show cleaned replication details (vertical)
      debug:
        msg: |
          {% for line in cleaned_details_list %}
          {{ line }}
          {% endfor %}