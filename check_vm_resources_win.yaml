---
- hosts: windows
  gather_facts: no
  tasks:
    - name: Get CPU load percentage
      win_shell: (Get-WmiObject Win32_Processor | Measure-Object -Property LoadPercentage -Average).Average
      register: cpu_load_raw

    - name: Get Total and Free Physical Memory (MB)
      win_shell: |
        $os = Get-CimInstance Win32_OperatingSystem
        $total = [math]::Round($os.TotalVisibleMemorySize / 1024, 2)
        $free = [math]::Round($os.FreePhysicalMemory / 1024, 2)
        Write-Output "total=$total"
        Write-Output "free=$free"
      register: mem_output
      
    - name: Get disk usage for C
      win_shell: |
        $disk = Get-CimInstance Win32_LogicalDisk -Filter "DeviceID='C:'"
        $total = [math]::Round($disk.Size / 1GB, 2)
        $free = [math]::Round($disk.FreeSpace / 1GB, 2)
        $used = $total - $free
        $percentUsed = [math]::Round(($used / $total) * 100, 2)
        Write-Output "total=$total"
        Write-Output "free=$free"
        Write-Output "used=$used"
        Write-Output "used_percent=$percentUsed"
      register: disk_output

    - name: Get disk usage for D
      win_shell: |
        $disk = Get-CimInstance Win32_LogicalDisk -Filter "DeviceID='D:'"
        $total = [math]::Round($disk.Size / 1GB, 2)
        $free = [math]::Round($disk.FreeSpace / 1GB, 2)
        $used = $total - $free
        $percentUsed = [math]::Round(($used / $total) * 100, 2)
        Write-Output "total=$total"
        Write-Output "free=$free"
        Write-Output "used=$used"
        Write-Output "used_percent=$percentUsed"
      register: disk_d_output

    - name: Get MAC address using PowerShell
      win_shell: |
        Get-NetAdapter | ForEach-Object {
        "$($_.Name)=$($_.MacAddress)" }
      register: mac_info

    - set_fact:
        cpu_load_percentage: "{{ cpu_load_raw.stdout | float | round(2) }}"
        total_physical_memory_mb: "{{ mem_output.stdout_lines | select('search', '^total=') | first | regex_replace('^total=', '') | float | round(2) }}"
        free_physical_memory_mb: "{{ mem_output.stdout_lines | select('search', '^free=') | first | regex_replace('^free=', '') | float | round(2) }}"
        disk_total_gb: "{{ disk_output.stdout_lines | select('search', '^total=') | first | regex_replace('^total=', '') | float | round(2) }}"
        disk_free_gb: "{{ disk_output.stdout_lines | select('search', '^free=') | first | regex_replace('^free=', '') | float | round(2) }}"
        disk_used_gb: "{{ disk_output.stdout_lines | select('search', '^used=') | first | regex_replace('^used=', '') | float | round(2) }}"
        disk_used_percent: "{{ disk_output.stdout_lines | select('search', '^used_percent=') | first | regex_replace('^used_percent=', '') | float | round(2) }}"
        disk_d_total_gb: "{{ disk_d_output.stdout_lines | select('search', '^total=') | first | regex_replace('^total=', '') | float | round(2) }}"
        disk_d_free_gb: "{{ disk_d_output.stdout_lines | select('search', '^free=') | first | regex_replace('^free=', '') | float | round(2) }}"
        disk_d_used_gb: "{{ disk_d_output.stdout_lines | select('search', '^used=') | first | regex_replace('^used=', '') | float | round(2) }}"
        disk_d_used_percent: "{{ disk_d_output.stdout_lines | select('search', '^used_percent=') | first | regex_replace('^used_percent=', '') | float | round(2) }}"

    - set_fact:
        used_physical_memory_mb: "{{ (total_physical_memory_mb | float - free_physical_memory_mb | float) | round(2) }}"
        memory_usage_percentage: >-
          {% if total_physical_memory_mb | float > 0 %}
          {{ ((total_physical_memory_mb | float - free_physical_memory_mb | float) / total_physical_memory_mb | float * 100) | round(2) }}
          {% else %}
          0.0
          {% endif %}

    - name: Display system information summary
      debug:
        msg: |
          ===== System Info =====
          CPU Load: {{ cpu_load_percentage }} %
          Memory: Total {{ total_physical_memory_mb }} MB | Used {{ used_physical_memory_mb }} MB | Free {{ free_physical_memory_mb }} MB | Usage {{ memory_usage_percentage }} %
          Disk C:: Used {{ disk_used_gb }} GB / {{ disk_total_gb }} GB ({{ disk_used_percent }} % used)
          Disk D:: Used {{ disk_d_used_gb }} GB / {{ disk_d_total_gb }} GB ({{ disk_d_used_percent }} % used)
          MAC Addresses:
          {% for line in mac_info.stdout_lines %}
            - {{ line }}
          {% endfor %}